/* tslint:disable */
/* eslint-disable */
/**
 * Constant Contact API v3
 * Swagger build version 3.0.2475
 *
 * The version of the OpenAPI document: 1.0.116
 * Contact: webservices@constantcontact.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * Additional details about the SMS consent actions (opt-in, opt-out) in JSON format. The  <code>consent_action_type</code> and the method used to add or update a contacts SMS details determines which properties are returned in the results.
 * @export
 * @interface GetSmsEngagementHistory200ResponseInnerHistoryDetails
 */
export interface GetSmsEngagementHistory200ResponseInnerHistoryDetails {
    /**
     * The code representing the consent state, including <code>E</code> for optin and <code>O</code> for Optin.
     * @type {string}
     * @memberof GetSmsEngagementHistory200ResponseInnerHistoryDetails
     */
    'state'?: string;
    /**
     * The code representing the consent source type, including <code>A</code> for Account, <code>C</code> for Contact, and <code>S</code>\' for System.
     * @type {string}
     * @memberof GetSmsEngagementHistory200ResponseInnerHistoryDetails
     */
    'source'?: string;
    /**
     * The type of SMS consent used.
     * @type {string}
     * @memberof GetSmsEngagementHistory200ResponseInnerHistoryDetails
     */
    'consent_type'?: string;
    /**
     * The date and time that SMS engagement data was last updated, in ISO-8601 format. System generated.
     * @type {string}
     * @memberof GetSmsEngagementHistory200ResponseInnerHistoryDetails
     */
    'consent_action_time'?: string;
    /**
     * The type of consent action provided.
     * @type {string}
     * @memberof GetSmsEngagementHistory200ResponseInnerHistoryDetails
     */
    'consent_action_type'?: string;
    /**
     * The code representing the medium used to provide consent. Medium types include mobile device (<code>MD</code>). lead generation form(<code>LF</code>), deactivation by carrier(<code>CD</code>), import_file:(<code>FI</code>), and system (<code>SY</code>).
     * @type {string}
     * @memberof GetSmsEngagementHistory200ResponseInnerHistoryDetails
     */
    'consent_medium_type'?: string;
    /**
     * The time that SMS consent was last updated.
     * @type {string}
     * @memberof GetSmsEngagementHistory200ResponseInnerHistoryDetails
     */
    'source_consent_timestamp'?: string;
    /**
     * If applicable, the IP address from which the consent came.
     * @type {string}
     * @memberof GetSmsEngagementHistory200ResponseInnerHistoryDetails
     */
    'source_ip'?: string;
    /**
     * If applicable, the SMS consent number associated with the source.
     * @type {string}
     * @memberof GetSmsEngagementHistory200ResponseInnerHistoryDetails
     */
    'source_sms_number'?: string;
    /**
     * If applicable, the advertising numeric component used to advertise to the contact.. For example, if <code>advertised_frequency</code> is set to <code> 2</code> , and  <code>advertised_interval</code> is set to <code>M</code>, the contact receives advertisements twice a month.
     * @type {number}
     * @memberof GetSmsEngagementHistory200ResponseInnerHistoryDetails
     */
    'advertised_frequency'?: number;
    /**
     * If applicable, the interval component used to advertise to the contact. For example, if <code>advertised_frequency</code> is set to <code> 2</code> , and  <code>advertised_interval</code> is set to <code>M</code>, the contact receives advertisements twice a month.
     * @type {string}
     * @memberof GetSmsEngagementHistory200ResponseInnerHistoryDetails
     */
    'advertised_interval'?: string;
}

